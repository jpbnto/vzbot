################################################################################
# Recommended macros and config entries if you use Mainsail or Fluidd!         #
# You can edit or delete those macros if you already defined them elsewhere!   #
################################################################################

#########################  Start Print, End Print & Flow  #########################

[gcode_macro PRINT_START]
gcode:
#Get Bed and Extruder temperature from Slicer GCode
  {% set BED_TEMP = params.BED_TEMP|default(40)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(180)|float %}
  {% set FILAMENT_TYPE = params.FILAMENT_TYPE|default("pla")|lower%}
  # end of definitions
  _green
  G28
  ATTACH_PROBE_LOCK
# Filament Flow Rates, Retraction & Z-Offset
    {% if 'abs' in FILAMENT_TYPE %}
     M118 ABS Filament
     SET_RETRACTION RETRACT_LENGTH=0.6
     M221 S97
     SET_GCODE_OFFSET z=-0.015
     SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=50
 #    BED_MESH_PROFILE LOAD="abs"
     SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE=0.065

  {% elif 'petg' in FILAMENT_TYPE %}
     M118 PETG Filament
     SET_RETRACTION RETRACT_LENGTH=0.6
     M221 S104
     SET_GCODE_OFFSET z=0.00
     SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=40
     SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE=0.08
 #    BED_MESH_PROFILE LOAD="petg"

  {% elif 'pla' in FILAMENT_TYPE %}
     M118 PLA Filament
     SET_RETRACTION RETRACT_LENGTH=0.6
     M221 S102
     SET_GCODE_OFFSET z=0.00
     SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=35
     SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE=0.075
 #    BED_MESH_PROFILE LOAD="pla"


  {% elif 'flex' in FILAMENT_TYPE %}
     M118 TPU Filament
     SET_RETRACTION RETRACT_LENGTH=0.3
     M221 S96
     SET_GCODE_OFFSET z=0.00
     SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=35
     SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE=0.075
#     BED_MESH_PROFILE LOAD="tpu"


  {% endif %}
  G90 ; use absolute coordinates
  M83 ; extruder relative mode
  _red
  M104 S{EXTRUDER_TEMP} T0
  M190 S{BED_TEMP} ;m140
  _green
  G28 Z ; home z axis
  SKEW_PROFILE LOAD=my_skew_profile
  BED_MESH_CALIBRATE AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}       #comment for print recovery
  BED_MESH_PROFILE LOAD="default"                                                                                  #comment for print recovery
  _magenta
  DOCK_PROBE_UNLOCK
  M109 S{EXTRUDER_TEMP} T0
  G1 X{printer.toolhead.axis_maximum.x / 2.0} Y{printer.toolhead.axis_maximum.y - 1} F6000 #Z{printer.toolhead.position.z} 
  G1 E5 F1000
  G1 Z1.0 F600                                                                                                     #comment for print recovery
  _white

[gcode_macro PRINT_END]
gcode:
  #Get Printer built volume dimensions
  {% set X_MAX = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set Z_MAX = printer.toolhead.axis_maximum.z|float %}
  # calculate save lift position
  {% set ACT_Z = printer.toolhead.position.z|float %}
  {% if ACT_Z < (Z_MAX - 2.0) %}
      {% set Z_SAFE = 2.0 %}
  {% else %}
      {% set Z_SAFE = Z_MAX - ACT_Z %}
  {% endif %}
  # Turn off bed, extruder, and fan
  M140 S0
  M104 S0
  M106 S0
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=35
  # Move nozzle away from print while retracting
  G91
  G1 X5 Y5 E-1 F6000
  G1 Z2 F6000
  G1 E1 F150
  G1 E-10 F500
  # Present print
  G90
  G1 X{X_MAX /2} Y{Y_MAX -10} F6000
  {% if ACT_Z < (Z_MAX /2) %}
    G1 Z{Z_MAX /2} F900
   {% else %}
    G1 Z{Z_MAX -1} F900
  {% endif %}
  SET_SKEW CLEAR=1
  BED_MESH_CLEAR
  _blue
  #FILAMENT_UNLOAD


#########################  Others  #########################

[gcode_macro FILAMENT_LOAD]
# Heat to 200°C then prime the nozzle
description: Load filament (heat nozzle if necessary)
gcode:
  M118 Loading 50mm Filament
  {% set TEMP = params.EXTRUDER_TEMP|default(200)|int %}
  {% if printer[printer.toolhead.extruder].temperature < 200.0 %}
    M109 S{TEMP} T0
  {%endif%}
  M83                                    ; set extruder to relative
  G1 E50 F3000                           ; slower extrusion for hotend path
  G1 E50 F500
  G1 E3 F150                             ; prime nozzle with filament
  M82                                    ; set extruder to absolute
  M118 Loading Done.

[gcode_macro FILAMENT_UNLOAD]
# Heat to 172°C then Unload Filament
description: Unload filament (heat nozzle if necessary)
gcode:
  M118 Unloading Filament
  {% set TEMP = params.EXTRUDER_TEMP|default(172)|int %}
  {% if printer[printer.toolhead.extruder].temperature < 170.0 %}
    M109 S{TEMP} T0
  {%endif%}
  M83                                    ; set extruder to relative
  G1 E2 F150                             ; prime nozzle with filament
  G1 E-60 F3000                          ; slower extrusion for hotend path
#  G1 E-55 F3000
  M82                                    ; set extruder to absolute
  TURN_OFF_HEATERS
  M118 Unloading Done.

[gcode_macro RUNOUT_FILAMENT_UNLOAD]
gcode:
  M118 Change Filament
  SAVE_GCODE_STATE NAME=UNLOADFILAMENT
  M83                                   ; set extruder to relative
  G1 E2 F600                           ; extrude a little to soften tip 
  G1 E-55 F3000                         ; retract filament completely
  G1 E-55 F3000
  RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro RUNOUT_FILAMENT_LOAD]
gcode:
  SAVE_GCODE_STATE NAME=LOADFILAMENT
  M118 Loading New Filament
  M83                                   ; set extruder to relative
  G1 E50 F2000
  G1 E50 F600
  RESTORE_GCODE_STATE NAME=LOADFILAMENT

[gcode_macro HOME]
gcode:
  M118 Home
  _green
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}

[gcode_macro NOZZLE_PRIME]
gcode:
  M118 Priming...
  G91
  G1 E3 F150
  G1 E3 F120
  G90
  M118 Priming Done.

[gcode_macro NOZZLE_PURGE]
gcode:
  M118 Purging...
  G91
  G1 E15 F150
  G1 E15 F150
  G1 E15 F150
  G1 E15 F150
  G1 E15 F120
  G90
  M118 Purging Done.

[gcode_macro TILT_BED_MESH]
gcode:
  M118 Tilt Bed Mesh
  HOME
  ATTACH_PROBE_LOCK
  Z_TILT_ADJUST
  BED_MESH_CALIBRATE

[gcode_macro TILT_HOME]
gcode:
  _green
  M118 Tilt Home
  HOME
  _magenta
  ATTACH_PROBE_LOCK
  Z_TILT_ADJUST
  _blue

[gcode_macro Z_OFFSET]
gcode:
  M118 Z Offset
  HOME
  ATTACH_PROBE
  M118 Calibrating Probe
  G1 X190 Y160 Z10
  PROBE_CALIBRATE

[gcode_macro Z_PARK]
gcode:
  M118 Parking...
  HOME
  ATTACH_PROBE_LOCK
  G1 X{printer.toolhead.axis_maximum.x -2} Y{printer.toolhead.axis_maximum.y -2} Z{printer.toolhead.axis_maximum.z -15} F6000
  m107
  TURN_OFF_HEATERS
  M84
  M118 Parking Done.

######################### Filament  #########################

[gcode_macro _FILAMENT_ABS]
gcode:
  M118 Preheating for ABS
  HOME
  _cyan
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=50
  M104 S240
  ATTACH_PROBE_LOCK
#  Z_TILT_ADJUST
  M140 S100
#  G90
#  G1 X150 Y0 Z100 F6000

[gcode_macro _FILAMENT_PETG]
gcode:
  M118 Preheating for PETG
  HOME
  _orange
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=40
  M104 S230
  ATTACH_PROBE_LOCK
#  Z_TILT_ADJUST
  M140 S75
#  G90
# G1 X150 Y0 Z100 F6000

[gcode_macro _FILAMENT_PLA]
gcode:
  M118 Preheating for PLA
  HOME
  _yellow
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=35
  M104 S205
  ATTACH_PROBE_LOCK
#  Z_TILT_ADJUST
  M140 S60
#  G90
#  G1 X150 Y0 Z100 F6000

[gcode_macro _FILAMENT_PLA_F]
gcode:
  M118 Preheating for PLA-F
  HOME
  _yellow
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=35
  M104 S210
  ATTACH_PROBE_LOCK
#  Z_TILT_ADJUST
  M140 S65
#  G90
#  G1 X150 Y0 Z100 F6000

[gcode_macro _FILAMENT_TPU]
gcode:
  M118 Preheating for TPU
  HOME
  _pink
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=35
  M104 S210
  ATTACH_PROBE_LOCK
#  Z_TILT_ADJUST
  M140 S45
#  G90
#  G1 X150 Y0 Z100 F6000

#########################  Turn Off  #########################

[gcode_macro OFF_FANS]
gcode:
  m107

[gcode_macro OFF_HEATERS]
gcode:
  TURN_OFF_HEATERS

[gcode_macro OFF_MOTORS]
gcode:
  M84

#########################  PID Tune  #########################

[gcode_macro PID_Tune_Hotend]
gcode:   
  M118 PID Tune Hotend
  {% set tool_temp = params.TEMPERATURE|default(230)|int %}
  PID_CALIBRATE HEATER=extruder TARGET={tool_temp}

[gcode_macro PID_Tune_Bed]
gcode:
  M118 PID Tune Bed
  {% set bed_temp = params.TEMPERATURE|default(80)|int %}
  PID_CALIBRATE HEATER=heater_bed TARGET={bed_temp}

#########################  Temparature Sensor  #########################

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 100

#########################  Pause, Resume, Cancel, Etc  #########################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing:PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  # read E from pause macro
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #Get Printer built volume dimensions
  {% set X_MAX = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set Y_MIN = printer.toolhead.axis_minimum.y|float - 5.0 %}
  {% set Z_MAX = printer.toolhead.axis_maximum.z|float %}
  # calculate save lift position
  {% set ACT_Z = printer.toolhead.position.z|float %}
  {% if ACT_Z < (Z_MAX - 2.0) %}
      {% set Z_SAFE = 2.0 %}
  {% else %}
      {% set Z_SAFE = Z_MAX - ACT_Z %}
  {% endif %}
  # end of definitions
  SAVE_GCODE_STATE NAME=PAUSE_state
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{Z_SAFE} F900
    G90
    G1 X{X_MAX /2} Y{Y_MIN +5} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  # read E from pause macro
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  # get VELOCITY parameter if specified
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  # end of definitions
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESTORE_GCODE_STATE NAME=PAUSE_state
  RESUME_BASE ;{get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  # end of definitions
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  G91
  G1 Z5
  G90
  G1 X{printer.toolhead.axis_maximum.x - 5} Y{printer.toolhead.axis_minimum.y + 5} Z{printer.toolhead.position.z + 5} F6000
  #M84 X Y E ; disable steppers

[gcode_macro RESUME_RUNOUT]
gcode:
  RUNOUT_FILAMENT_LOAD
  RESUME

#[gcode_macro M300]
#gcode:
    # Use a default 1kHz tone if S is omitted.
#    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
#    {% set P = params.P|default(100)|int %}
#    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
#    G4 P{P}
#    SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro M600]
gcode:
  PAUSE
  RUNOUT_FILAMENT_UNLOAD
  SET_IDLE_TIMEOUT TIMEOUT=3600

[gcode_macro M900]
gcode:
  {% set K = params.K|default(0)|float %}
  SET_PRESSURE_ADVANCE ADVANCE={K}

#########################  Temperature Wait  #########################

[gcode_macro M109]
rename_existing: M99109
gcode:
  #Parameters
  {% set s = params.S|float %}
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
  {% if s != 0 %}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
  {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
  #Parameters
  {% set s = params.S|float %}
    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
  {% if s != 0 %}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
  {% endif %}

#########################  Backup Github  #########################

[gcode_shell_command backup]
command: /home/pi/scripts/klipper_backup_script/klipper_config_git_backup.sh
timeout: 30
verbose: False

[gcode_macro BACKUP_CONFIG]
gcode:
  M118 Backing Up Config to Github
  RUN_SHELL_COMMAND CMD=backup